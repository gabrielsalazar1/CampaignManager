AWSTemplateFormatVersion: 2010-09-09
Description: Campaign Manager's EMR Cluster
Parameters:
  EMRClusterName:
    Description: Name of the cluster
    Type: String
    Default: emr-bigdata-cm-qas
  KeyName:
    Description: Must be an existing Keyname
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: bigdatakp
  MasterInstanceType:
    Description: Instance type to be used for the master instance.
    Type: String
    Default: m4.4xlarge
  CoreInstanceType:
    Description: Instance type to be used for core instances.
    Type: String
    Default: m4.large
  NumberOfCoreInstances:
    Description: Must be a valid number
    Type: Number
    Default: 4
  Subnet:
    Description: Subnet to launch services in
    Type: 'AWS::EC2::Subnet::Id'
    Default: subnet-a69ac8cc
  VPC:
    Description: VPC to launch services in
    Type: 'AWS::EC2::VPC::Id'
    Default: vpc-ee8d3285
  LogUri:
    Description: Bucket URI for EMR logs
    Type: String
    Default: 's3://belc-bigdata-cm-data-qas/EMR/logs/'
  ReleaseLabel:
    Description: Must be a valid EMR release  version
    Type: String
    Default: emr-5.17.0
  SpotPrice:
    Description: Spot price (or use 0 for 'on demand' instance)
    Type: Number
    Default: '0.062'
  NatSG:
    Description: SG Id Nat QAS
    Type: 'AWS::EC2::SecurityGroup::Id'
    Default: sg-7162cb0b
  BastionSG:
    Description: SG Id Bastion QAS
    Type: 'AWS::EC2::SecurityGroup::Id'
    Default: sg-0cd93949f3e18e7d0
Mappings: {}
Conditions:
  WithSpotPrice: !Not 
    - !Equals 
      - !Ref SpotPrice
      - '0'
Resources:
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: SG_BIGDATA_CM_WCF_QAS
      GroupDescription: CM Cluster
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          CidrIp: 172.19.64.0/20
          Description: Red Belcorp Wifi
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          CidrIp: 172.19.2.0/23
          Description: Red Belcorp Piso 4
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          SourceSecurityGroupId: !Ref NatSG
          Description: Nat QAS
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          SourceSecurityGroupId: !Ref NatSG
          Description: Nat QAS
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          SourceSecurityGroupId: !Ref BastionSG
          Description: Bastion QAS
  EMRCluster:
    DependsOn:
      - EMRClusterServiceRole
      - EMRClusterInstanceProfileRole
      - EMRClusterInstanceProfile
    Type: 'AWS::EMR::Cluster'
    Properties:
      Applications:
        - Name: Spark
        - Name: Hive
        - Name: Tez
        - Name: ZooKeeper
        - Name: Livy
      Configurations: []

      Instances:
        Ec2KeyName: !Ref KeyName
        Ec2SubnetId: !Ref Subnet
        MasterInstanceGroup:
          InstanceCount: 1
          InstanceType: !Ref MasterInstanceType
          Market: ON_DEMAND
          Name: Master
        CoreInstanceGroup:
          InstanceCount: !Ref NumberOfCoreInstances
          InstanceType: !Ref CoreInstanceType
          Market: !If 
            - WithSpotPrice
            - SPOT
            - ON_DEMAND
          Name: Core
        EmrManagedMasterSecurityGroup: !Ref SecurityGroup
        EmrManagedSlaveSecurityGroup: !Ref SecurityGroup
        ServiceAccessSecurityGroup: !Ref SecurityGroup
        TerminationProtected: false

      VisibleToAllUsers: true
      JobFlowRole: !Ref EMRClusterInstanceProfile
      ReleaseLabel: !Ref ReleaseLabel
      LogUri: !Ref LogUri
      Name: !Ref EMRClusterName
      AutoScalingRole: EMR_AutoScaling_DefaultRole
      ServiceRole: !Ref EMRClusterServiceRole
      Tags:
        - Key: CTLAdmin
          Value: 'NO'
        - Key: Direccion
          Value: BIGDATA
        - Key: Entorno
          Value: QAS
        - Key: Grupo
          Value: BIGDATA
        - Key: Name
          Value: EMRLNX_BIGDATA_CM_QAS
        - Key: ServerRol
          Value: Servicio
        - Key: Tipo
          Value: Proyecto
  EMRClusterServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: bigdata_cm_EMRClusterServiceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - elasticmapreduce.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: EMRClusterServicePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - 'ec2:AuthorizeSecurityGroupEgress'
                  - 'ec2:AuthorizeSecurityGroupIngress'
                  - 'ec2:CancelSpotInstanceRequests'
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:CreateSecurityGroup'
                  - 'ec2:CreateTags'
                  - 'ec2:DeleteNetworkInterface'
                  - 'ec2:DeleteSecurityGroup'
                  - 'ec2:DeleteTags'
                  - 'ec2:DescribeAvailabilityZones'
                  - 'ec2:DescribeAccountAttributes'
                  - 'ec2:DescribeDhcpOptions'
                  - 'ec2:DescribeImages'
                  - 'ec2:DescribeInstanceStatus'
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeKeyPairs'
                  - 'ec2:DescribeNetworkAcls'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DescribePrefixLists'
                  - 'ec2:DescribeRouteTables'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:DescribeSpotInstanceRequests'
                  - 'ec2:DescribeSpotPriceHistory'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeTags'
                  - 'ec2:DescribeVpcAttribute'
                  - 'ec2:DescribeVpcEndpoints'
                  - 'ec2:DescribeVpcEndpointServices'
                  - 'ec2:DescribeVpcs'
                  - 'ec2:DetachNetworkInterface'
                  - 'ec2:ModifyImageAttribute'
                  - 'ec2:ModifyInstanceAttribute'
                  - 'ec2:RequestSpotInstances'
                  - 'ec2:RevokeSecurityGroupEgress'
                  - 'ec2:RunInstances'
                  - 'ec2:TerminateInstances'
                  - 'ec2:DeleteVolume'
                  - 'ec2:DescribeVolumeStatus'
                  - 'ec2:DescribeVolumes'
                  - 'ec2:DetachVolume'
                  - 'iam:GetRole'
                  - 'iam:GetRolePolicy'
                  - 'iam:ListInstanceProfiles'
                  - 'iam:ListRolePolicies'
                  - 'iam:PassRole'
                  - 's3:Get*'
                  - 's3:List*'
                  - 'cloudwatch:PutMetricAlarm'
                  - 'cloudwatch:DescribeAlarms'
                  - 'cloudwatch:DeleteAlarms'
                  - 'application-autoscaling:RegisterScalableTarget'
                  - 'application-autoscaling:DeregisterScalableTarget'
                  - 'application-autoscaling:PutScalingPolicy'
                  - 'application-autoscaling:DeleteScalingPolicy'
                  - 'application-autoscaling:Describe*'
        - PolicyName: EMRClusterCreateServiceLinkedRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: 'arn:aws:iam::*:role/aws-service-role/spot.amazonaws.com/AWSServiceRoleForEC2Spot*'
                Action: "iam:CreateServiceLinkedRole"
                Condition:
                  StringLike:
                    iam:AWSServiceName:
                      - "spot.amazonaws.com"
  EMRClusterInstanceProfileRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: bigdata_cm_EMRClusterInstancesRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: EMRClusterInstanceForEC2Glue
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - 'cloudwatch:*'
                  - 'ec2:Describe*'
                  - 'elasticmapreduce:Describe*'
                  - 'elasticmapreduce:ListBootstrapActions'
                  - 'elasticmapreduce:ListClusters'
                  - 'elasticmapreduce:ListInstanceGroups'
                  - 'elasticmapreduce:ListInstances'
                  - 'elasticmapreduce:ListSteps'
                  - 'glue:CreateDatabase'
                  - 'glue:UpdateDatabase'
                  - 'glue:DeleteDatabase'
                  - 'glue:GetDatabase'
                  - 'glue:GetDatabases'
                  - 'glue:CreateTable'
                  - 'glue:UpdateTable'
                  - 'glue:DeleteTable'
                  - 'glue:GetTable'
                  - 'glue:GetTables'
                  - 'glue:GetTableVersions'
                  - 'glue:CreatePartition'
                  - 'glue:BatchCreatePartition'
                  - 'glue:UpdatePartition'
                  - 'glue:DeletePartition'
                  - 'glue:BatchDeletePartition'
                  - 'glue:GetPartition'
                  - 'glue:GetPartitions'
                  - 'glue:BatchGetPartition'
                  - 'glue:CreateUserDefinedFunction'
                  - 'glue:UpdateUserDefinedFunction'
                  - 'glue:DeleteUserDefinedFunction'
                  - 'glue:GetUserDefinedFunction'
                  - 'glue:GetUserDefinedFunctions'
        - PolicyName: EMRClusterInstanceForS3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:PutObjectAcl'
                  - 's3:GetObject'
                  - 's3:GetObjectAcl'
                  - 's3:DeleteObject'
                  - 's3:ListBucket'
                Resource:
                  - 'arn:aws:s3:::forecast-events-test/*'
                  - 'arn:aws:s3:::forecast-events-test'
                  - 'arn:aws:s3:::belc-bigdata-functional-dlk-qas/*'
                  - 'arn:aws:s3:::belc-bigdata-functional-dlk-qas'
                  - 'arn:aws:s3:::belc-bigdata-cm-data-qas/*'
                  - 'arn:aws:s3:::belc-bigdata-cm-data-qas'
                  - 'arn:aws:s3:::belc-bigdata-apps-shared-qas/*'
                  - 'arn:aws:s3:::belc-bigdata-apps-shared-qas'
  EMRClusterInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref EMRClusterInstanceProfileRole
Outputs: {}