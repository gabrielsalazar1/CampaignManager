{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation LambdaFunction1 Stack",
  "Parameters" : {
    "Subnet": {
      "Description": "Subnet to launch services in",
      "Type": "AWS::EC2::Subnet::Id",
      "Default": "subnet-a69ac8cc"
    },
    "VPC": {
      "Description": "VPC to launch services in",
      "Type": "AWS::EC2::VPC::Id",
      "Default": "vpc-ee8d3285"
    }
  },
  "Resources" : {
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["lambda.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "root",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{ "Effect": "Allow", "Action": ["logs:*"], "Resource": "arn:aws:logs:*:*:*" }]
          }
        }]
      }
    },
    "LambdaExecutionPolicy": {
      "DependsOn": [
          "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "MyLambdaRolePolicy",
        "Roles": [
            {"Ref": "LambdaExecutionRole"}
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": ["logs:*"],
              "Resource": ["arn:aws:logs:*:*:*"]
            },
            {
              "Effect": "Allow",
              "Action": [
                "ec2:Describe*"
              ],
              "Resource": ["*"]
            }
          ]
        }
      }
    },
    "SecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Allow HTTP traffic to the host",
        "VpcId" : {"Ref" : "VPC"},
        "SecurityGroupIngress" : [{
          "IpProtocol" : "tcp",
          "FromPort" : "80",
          "ToPort" : "80",
          "CidrIp" : "0.0.0.0/0"
        }],
        "SecurityGroupEgress" : [{
          "IpProtocol" : "tcp",
          "FromPort" : "80",
          "ToPort" : "80",
          "CidrIp" : "0.0.0.0/0"
        }]
      }
    },
    "bigdata_CM_QAS_fn1": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "LambdaExecutionRole",
        "LambdaExecutionPolicy"
      ],
      "Properties": {
        "Description" : "Lambda with SecurityGroup and subnet inside the VPC that includes the resources to which your Lambda function requires access.",
        "Environment" : "QAS",
        "FunctionName" : "bigdata_CM_QAS_fn1",
        "ReservedConcurrentExecutions" : 12,
        "VpcConfig" : {
          "SecurityGroupIds" : [ "SecurityGroup" ],
          "SubnetIds" : [ "Subnet" ]
        },
        "Code": {
          "S3Bucket": "campaign-manager-lambdas",
          "S3Key": "lambda-function-1.zip"
        },
        "Role": { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
        "Timeout": 60,
        "Handler": "lambda_function.lambda_handler",
        "Runtime": "python3.6",
        "MemorySize": 128,
        "Tags" : [
          { "Key" : "Direccion", "Value" : "BIGDATA" },
          { "Key" : "Entorno", "Value" : "QAS" },
          { "Key" : "Grupo", "Value" : "BIGDATA" }
        ]
      }
    },
    "bigdata_CM_QAS_fn2": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "LambdaExecutionRole",
        "LambdaExecutionPolicy"
      ],
      "Properties": {
        "Description" : "Lambda with SecurityGroup and subnet inside the VPC that includes the resources to which your Lambda function requires access.",
        "Environment" : "QAS",
        "FunctionName" : "bigdata_CM_QAS_fn2",
        "ReservedConcurrentExecutions" : 12,
        "VpcConfig" : {
          "SecurityGroupIds" : [ "SecurityGroup" ],
          "SubnetIds" : [ "Subnet" ]
        },
        "Code": {
          "S3Bucket": "campaign-manager-lambdas",
          "S3Key": "lambda-function-2.zip"
        },
        "Role": { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
        "Timeout": 60,
        "Handler": "lambda_function.lambda_handler",
        "Runtime": "python3.6",
        "MemorySize": 128,
        "Tags" : [
          { "Key" : "Direccion", "Value" : "BIGDATA" },
          { "Key" : "Entorno", "Value" : "QAS" },
          { "Key" : "Grupo", "Value" : "BIGDATA" }
        ]
      }
    },
    "bigdata_CM_QAS_fn3": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "LambdaExecutionRole",
        "LambdaExecutionPolicy"
      ],
      "Properties": {
        "Description" : "Lambda with SecurityGroup and subnet inside the VPC that includes the resources to which your Lambda function requires access.",
        "Environment" : "QAS",
        "FunctionName" : "bigdata_CM_QAS_fn3",
        "ReservedConcurrentExecutions" : 12,
        "VpcConfig" : {
          "SecurityGroupIds" : [ "SecurityGroup" ],
          "SubnetIds" : [ "Subnet" ]
        },
        "Code": {
          "S3Bucket": "campaign-manager-lambdas",
          "S3Key": "lambda-function-3.zip"
        },
        "Role": { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
        "Timeout": 60,
        "Handler": "lambda_function.lambda_handler",
        "Runtime": "python3.6",
        "MemorySize": 128,
        "Tags" : [
          { "Key" : "Direccion", "Value" : "BIGDATA" },
          { "Key" : "Entorno", "Value" : "QAS" },
          { "Key" : "Grupo", "Value" : "BIGDATA" }
        ]
      }
    },
  },
  "Outputs" : { }
}